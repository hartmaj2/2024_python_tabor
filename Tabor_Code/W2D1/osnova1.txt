TOPIC: vyvoj her

todo:
    herni enginy
        - nechceme muset vyrabet neco, co uz existuje (fyzika, gravitace)
        - nekdy se hodi si veci moci naklikat - kudy budou chodit nepratele, herni mapa atd.
    snimky (FPS) - film vs hrac
    herni smycka
    pygame
    kolize

1. Jak se tvori hry v praxi?
    (a) Zna nekdo nejaky herni engine? Unity, Unreal Engine, Godot
    (b) Proc se pouzivaji herni enginy?
    (c) Priklad s Godotem a mou hrou 
        - otevrit mou scenu, zneviditelnit pause menu a canvas modulate
        - ukazat, jak se daji naklikat cesty nepratel; kam se pise kod postavy

2. Co je to FPS?
    - snimky za sekundu
    - vedi, kolik FPS ma mit hra/film?

3. Herni smycka 
    - while True loop, ktery bezi, dokud bezi hra
    (a) reagovat na udalosti - kliknuti mysi, pokus o zavreni okna
    (b) aktualizovat pozice hracu, zkontrolovat kolize (zde se take bere v potaz, zda hrac drzi tlacitko ci ne)
    (c) vykreslit postupne vsechny postavy na obrazovku

4. pygame
    - neposkytuje moznost vyrabet mapu klikanim, nema vizualni rozhrani
    - lepe se ale naucime programovat

4.1 minimal code
    (a) potrebujeme import pygame
    (b) inicializovat pygame: pygame.init()
    (c) zalozit promennou pro obrazovku: screen = pygame.display.set_mode((sirka,vyska))
    (d) nekonecnou smycku
    (c) v nekonecne smycce for loop pres eventy

4.2 surface - je to vlastne textura pro postavu, na kterou muzu neco malovat/dat na ni obrazek
    - muzu ho zaplnit barvou
    - pygame mi take umoznuje vyrobit surface z obrazku: pygame.image.load(cesta)
    - muzu si urcit, kam ho budu chtit nakreslit: screen.blit(koho,kam)
        (!) POZOR:Â tim se postavicka hned nenakresli, akorat se naplanuje, kam ji budeme chtit nakreslit
    - nakreslit naplanovane: pygame.display.flip()

4.3 pohyb - staci hybat pozici, na kterou blitujeme surface (texturu)
    - vstup od uzivatele - proc nepouzivame input() ?
        - input() nam zablokuje smycku
        - potrebujeme neblokujici zpusob
    - smycka bezi na kazdem pocitaci jinak rychle

4.4 clock 
    - srovna rozdil mezi pocitaci - zadrzi smycku, pokud bezi moc rychle
        - pokud smycka bezi moc pomalu, tak mame smulu

4.5 rectangles
    - daji se ziskat pro dany surface
        - umoznuji lepe umistovat veci (muzeme rict, kde bude midbottom, center atd.)
        - rectangles navzajem dokazi detekovat kolize
        - dokazi take detekovat kolize s mysi

4.6 text 
    - je potreba vytvorit si font - pygame.font.Font(None,velikost)
    - surface s textem v danem fontu lze vytvaret pomoci metody render(text,True,barva)

4.7 klavesy
    - zda uzivatel zrovna drzi klavesu lze kontrolovat pomoci seznamu True/False hodnot
        - pygame.key.get_pressed()
    - potom se zeptame zda keys[index_klavesy] == True

4.8 mys
    - event na kliknuti: event.type == pygame.MOUSEBUTTONDOWN
    - pygame.mouse.get_pos() a rectangle.collidepoint(point_coordinate)

4.9 spawnovani nepratel
    - nepratele si ulozime do seznamu
    - pote muzeme prochazet vzdy vsechny a hybat s nimi / vykreslovat je

4.10 vlastni casove intervaly 
    - vygenerujeme si event.type cislo -> pygame.event.custom_type()
    - poprosime pygame aby nam generoval event v danem intervalu -> pygame.time.set_timer(event_no,interval)
