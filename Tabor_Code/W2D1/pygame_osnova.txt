TEMA: objekty a pygame
todo:
    objekty
    jak funguji hry

1. rozcvicka s vice zelvami

2. zaklady objektu - proc jsou dulezite, pustit video:
    https://www.youtube.com/watch?v=ZDa-Z5JzLYM&ab_channel=CoreySchafer

3. jak funguji hry
    - jak funguje video (snimky, FPS)
    - rozdil mezi hrou a filmem - input
    - proc nemuzeme pouzit metodu input() ve hre? (blokujici, neblokujici)

4. minimalni program a eventy (challenge pro vsechny)
    - ukazu, ze program registruje ruzne eventy
    - pomoci nich muzeme reagovat na vstup hrace

5. kresleni na obrazovku - surfaces
    (a) display surface - obrazovka
    (b) regular surface - image, shape, text
    - nakreslit podobenstvi s plakatem a obrazky
    - 1. vytvorit novy surface - pygame.Surface(velikost)
    - 2. rict screenu, ze ho chceme nekam nakreslit blit(koho,kam data levy horni okraj)
        - pomucka: blit jako blitka -> vyblijeme postavicku na obrazovku
        - pomucka: Y je sipka dolu, takze zvetsovani jde dolu
    - 3. rict pygame, at updatuje display

6. kresleni vlastnich obrazku
    - moznost: stahnout si z gitu, jak nainstalovat git na windows
    - pygame.image.load()

7. pohyb - vymyslet, jak bychom mohli hybat postavou (neco se musi menit, co?)
    - zkusit na ruznych systemch - windows, mac, spustenych vice aplikaci
        -> potrebujeme casovac
    - zatim nebudeme resit, jak casovac ziskat, cvicime pridani vice postavo
    - zkusime ovladat pomoci inputu

8. pridame clock

9. muzeme se pobavit o convert() a convert_alpha() pro zrychleni programu

10. rectangle
    - proc?
        - 1. lepsi ovladani polohy postavicky
        - 2. detekce kolizi
    - rectangle neni nic co vykreslujeme, funguje na pozadi
    - vytvorit:
        - 1. poprosime surface at nam rekne, jak je velky jeho rectangle (get_rect)
            - predame parametr vuci jake casti zadavame souradnice: https://www.pygame.org/docs/ref/rect.html#:~:text=The%20Rect%20object%20has%20several%20virtual%20attributes%20which%20can%20be%20used%20to%20move%20and%20align%20the%20Rect%3A
        - 2. pri blitovani pak rekneme screenu, ze chceme hrace tam, kde je rectangle
        - 3. ted uz staci jen hybat rectem a hrac bude vzdy skakat na nej

11. kolize - checkujeme, zda koliduji recty odpovidajicich surfacu
        - mozna kolize s mysi (udelat si tridu pro Character, hodi se type hints pro seznamy)

12. ovladani pomoci klaves - checkujeme hodnoty v seznamu keys = pygame.key.get_pressed()
    - jednotlive pozice jsou preddefinovane napr. pygame.K_UP

13. displaying score - potrebujeme font
    - pygame.font.Font(filepath,size) zalozi font
    - z fontu pak muzeme renderovat surfaces s textem

14. herni stavy - delaji se pres if podle stavu ve kterem jsme
    - co jsou to vubec herni stavy? - odpovidaji obrazovkam
    - postava muze mit take stavy: skakajici, skrceny, bezici, mrtvy atd.

15. transform - pouzijeme, pokud chceme nejak upravit texturu postavicky
    - zmenit velikost
    - zrotovat 

16. custom events - nejjednodusi zpusob, jak casovat udalosti
    - 1. vyrobit si cislo pro event -> pygame.event.custom_type()
    - 2. zaregistrovat timer, ktery bude spoustet event po danych intervalech -> pygame.time.set_timer(cislo_eventu,interval)
        - pokud zaregistruji novy timer pro stejny event, tak se ten stary timer zrusi
    - (!) neumoznuje nepravidelne intervaly mezi spawny nepratel

BONUS: Sprite class - pro lepsi oranizaci kodu 
    - 1. kazdy sprite musi byt v nejake group
        - (a) GroupSingle nebo Group
        - (b) objekty ve stejne group mezi sebou nemohou kolidovat
        - (c) hrdina byva v GroupSingle
    - Group
        - staci zavolat update a draw pro celou group
        - kazdy objekt si resi svuj vlastni update - v nem update movement, update visuals
    - pygame.sprite.Sprite je trida, od ktere nase classy musi dedit
        - musi si pak nastavit self.image a self.rect
    - kolize detekujeme pomoci pygame.sprite.collide_rect(self,player_group.sprite)
    - for loop pres vsechny sprites z group lze pomoci group.sprites()